// <auto-generated />
using System;
using Lexica.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Lexica.EF.Migrations
{
    [DbContext(typeof(LexicaContext))]
    [Migration("20210103174031_DbInitialization")]
    partial class DbInitialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Lexica.EF.Models.EntryTable", b =>
                {
                    b.Property<long>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EntryId")
                        .HasColumnType("integer");

                    b.Property<long>("SetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("RecId");

                    b.HasIndex("SetId");

                    b.ToTable("Entry","words");
                });

            modelBuilder.Entity("Lexica.EF.Models.ImportHistoryTable", b =>
                {
                    b.Property<long>("ImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ExecutedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("SetId")
                        .HasColumnType("bigint");

                    b.HasKey("ImportId");

                    b.HasIndex("SetId")
                        .IsUnique();

                    b.ToTable("ImportHistory","words");
                });

            modelBuilder.Entity("Lexica.EF.Models.SetTable", b =>
                {
                    b.Property<long>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("character varying(400)")
                        .HasMaxLength(400);

                    b.HasKey("SetId");

                    b.ToTable("Set","words");
                });

            modelBuilder.Entity("Lexica.EF.Models.EntryTable", b =>
                {
                    b.HasOne("Lexica.EF.Models.SetTable", "Set")
                        .WithMany("Entries")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Lexica.EF.Models.ImportHistoryTable", b =>
                {
                    b.HasOne("Lexica.EF.Models.SetTable", "Set")
                        .WithOne("Import")
                        .HasForeignKey("Lexica.EF.Models.ImportHistoryTable", "SetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
